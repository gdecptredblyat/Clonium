import random
class Item:
    def __init__(self, k, access, i, j, color):
        self.k = k
        self.access = access
        self.i = i
        self.j = j
        self.color = color


class Gamer:
    def __init__(self, allow, sum, number_of_cells):
        self.allow = allow
        self.sum = sum
        self.number_of_cells = number_of_cells


class CField:
    def __init__(self, length, width):
        self.length = length
        self.width = width
        self.items = []
        for i in range(length):
            self.items.append([0] * width)
        for i in range(length):
            for j in range(width):
                self.items[i][j] = Item(0, 1, i, j, 0)
        self.t = 1


AList = []
Previous_waves = []
DList_1 = []
DList_2 = []


def Print_Field():
    for f in range(length):
        st = []
        for g in range(width):
            st.append(Field.items[f][g].k)
        print(st)
    print("Sum of points gamer_1: ",Gamer_1.sum,". Sum of points gamer_2: ", Gamer_2.sum)
    print("Number of cells gamer_1: ", Gamer_1.number_of_cells, ". Number of cells gamer_2: ", Gamer_2.number_of_cells)
    #print("Number of waves: ",wave)


def Add_count(i, j):
    #Print_Field()
    #print("ya v add_count", i, j)
    Field.items[i][j].k += 1
    Field.items[i][j].color=G_1.allow
    G_1.sum += 1
    if (Field.items[i][j].k - 1 == 0):
        G_1.number_of_cells += 1
    #Print_Field()
    #print("ya v add_count posle number_of_cells + 1")
    if (Field.items[i][j].k > 3):
        Main_DList.append([i, j])


def Clear_Dis_List():
    #Print_Field()
    #print("ya v clear_dis_list")
    for c in range(len(Main_DList)):
        Disclosure(Main_DList[0][0], Main_DList[0][1])
        Main_DList.pop(0)

    #Print_Field()
    #print("ya v clear_dis_list posle cikla")
    if len(AList) > 0:
        Clear_Add_List()


def Clear_Add_List():
    if (Field.t == 1):
        Main_DList = DList_1
    else:
        Main_DList = DList_2

    #Print_Field()
    #print("ya v clear_add_list")
    for c in range(len(AList)):
        Add_count(AList[0][0], AList[0][1])
        AList.pop(0)
    Print_Field()
    #print("ya v clear_add_list posle cikla")

    Clear_Dis_List()
    if (Field.t == 1):
        Main_DList = DList_2
        Field.t = 2
    else:
        Main_DList = DList_1
        Field.t = 1


def Disclosure(i, j):
    #Print_Field()
    #print("ya v disclosure", i, j)
    Field.items[i][j].k -= 4
    if (Field.items[i][j].k ==0):
        Field.items[i][j].color = 0
    G_1.sum-=4
    G_1.number_of_cells-=1
    for c in [-1, 1]:
        if (i + c < length) and (i + c >= 0):
            AList.append([i + c, j])
            if(Field.items[i + c][j].color == G_2.allow):
                    G_1.number_of_cells += 1
                    G_2.number_of_cells -= 1
            if (Field.items[i + c][j].color != G_1.allow):
                Field.items[i + c][j].color = G_1.allow

                G_1.sum += Field.items[i + c][j].k
                G_2.sum -= Field.items[i + c][j].k
        if (j + c < width) and (j + c >= 0):
            AList.append([i, j + c])
            if (Field.items[i][j + c].color != G_1.allow):
                if (Field.items[i][j + c].color == G_2.allow):
                    G_1.number_of_cells += 1
                    G_2.number_of_cells -= 1

                Field.items[i][j + c].color = G_1.allow

                G_1.sum += Field.items[i][j + c].k
                G_2.sum -= Field.items[i][j + c].k


length = int(input("Enter length: "))
width = int(input("Enter width: "))
Field = CField(length, width)
Main_DList = DList_1

Start_error=True
while Start_error:
    start_1 = random.randint(0,length-1)
    start_2=random.randint(0,length-1)
    start_3=random.randint(0,width-1)
    start_4=random.randint(0,width-1)
    if abs(start_1-start_2)>1 and abs(start_2-start_4)>1:
        Start_error=False
    else:
        Start_error=True
print(start_1,start_2,start_3,start_4)
Gamer_1 = Gamer(1, 3, 1)
Gamer_2 = Gamer(2, 3, 1)
Field.items[start_1][start_3].k=3
Field.items[start_1][start_3].color=Gamer_1.allow
Field.items[start_2][start_4].k=3
Field.items[start_2][start_4].color=Gamer_2.allow
Print_Field()

first_player_error=True
second_player_error=True
Game = 1
wave=1
while Game:
    G_1 = Gamer_1
    G_2 = Gamer_2
    while first_player_error:
        i_1 = int(input("Enter i_1: "))
        j_1 = int(input("Enter j_1: "))
        if(Field.items[i_1][j_1].color==G_1.allow):
            first_player_error=False
        else:
            first_player_error=True

    AList.append([i_1, j_1])
    Clear_Add_List()
    if ((G_1.sum == 0) or (G_2.sum == 0)) and (wave > 1):
        Game = 0
        if (G_1.sum == 0):
            print("Game over. Gamer_2 win!!!")
        else:
            print("Game over. Gamer_1 win!!!")
    G_1 = Gamer_2
    G_2 = Gamer_1

    while second_player_error:
        i_2 = int(input("Enter i_2: "))
        j_2 = int(input("Enter j_2: "))
        if(Field.items[i_2][j_2].color==G_1.allow):
            second_player_error=False
        else:
            second_player_error=True
    AList.append([i_2, j_2])
    Clear_Add_List()
    first_player_error=True
    second_player_error=True
    if((G_1.sum==0) or (G_2.sum==0))and(wave>1):
        Game = 0
        if (G_1.sum==0):
            print("Game over. Gamer_1 win!!!")
        else:
            print("Game over. Gamer_2 win!!!")
    for f in range(width):
        st = []
        for g in range(length):
            st.append(Field.items[f][g].k)
            Previous_waves.append(st)
    wave +=1
print(Previous_waves)
